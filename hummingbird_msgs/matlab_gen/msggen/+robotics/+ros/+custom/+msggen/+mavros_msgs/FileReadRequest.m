classdef FileReadRequest < robotics.ros.Message
    %FileReadRequest MATLAB implementation of mavros_msgs/FileReadRequest
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2018 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'mavros_msgs/FileReadRequest' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = 'c83da8c18af06c9d7d1b66667fa2bb6b' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        FilePath
        Offset
        Size
    end
    
    properties (Constant, Hidden)
        PropertyList = {'FilePath', 'Offset', 'Size'} % List of non-constant message properties
        ROSPropertyList = {'file_path', 'offset', 'size'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = FileReadRequest(msg)
            %FileReadRequest Construct the message object FileReadRequest
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function filepath = get.FilePath(obj)
            %get.FilePath Get the value for property FilePath
            filepath = char(obj.JavaMessage.getFilePath);
        end
        
        function set.FilePath(obj, filepath)
            %set.FilePath Set the value for property FilePath
            validateattributes(filepath, {'char'}, {}, 'FileReadRequest', 'FilePath');
            
            obj.JavaMessage.setFilePath(filepath);
        end
        
        function offset = get.Offset(obj)
            %get.Offset Get the value for property Offset
            offset = typecast(int64(obj.JavaMessage.getOffset), 'uint64');
        end
        
        function set.Offset(obj, offset)
            %set.Offset Set the value for property Offset
            validateattributes(offset, {'numeric'}, {'nonempty', 'scalar'}, 'FileReadRequest', 'Offset');
            
            obj.JavaMessage.setOffset(offset);
        end
        
        function size = get.Size(obj)
            %get.Size Get the value for property Size
            size = typecast(int64(obj.JavaMessage.getSize), 'uint64');
        end
        
        function set.Size(obj, size)
            %set.Size Set the value for property Size
            validateattributes(size, {'numeric'}, {'nonempty', 'scalar'}, 'FileReadRequest', 'Size');
            
            obj.JavaMessage.setSize(size);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.FilePath = obj.FilePath;
            cpObj.Offset = obj.Offset;
            cpObj.Size = obj.Size;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.FilePath = strObj.FilePath;
            obj.Offset = strObj.Offset;
            obj.Size = strObj.Size;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.FilePath = obj.FilePath;
            strObj.Offset = obj.Offset;
            strObj.Size = obj.Size;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.mavros_msgs.FileReadRequest.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.mavros_msgs.FileReadRequest;
            obj.reload(strObj);
        end
    end
end
